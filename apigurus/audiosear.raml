#%RAML 1.0
title: Audiosear.ch
version: 1.0.0
baseUri: www.audiosear.ch/api
description: The Audiosear.ch API requires OAuth, which you can manage at <a href='/oauth/applications'>OAuth Applications</a>.<br/>API SDK clients available in <a href='https://github.com/popuparchive/audiosearch-client-python' target='_blank'>Python</a>, <a href='https://github.com/popuparchive/audiosearch-client-ruby' target='_blank'>Ruby</a>, <a href='https://github.com/popuparchive/audiosearch-client-php' target='_blank'>PHP</a>, <a href='https://github.com/popuparchive/audiosearch-client-node' target='_blank'>Node</a>, <a href='https://github.com/aljazeerair/AudiosearchClientJava' target='_blank'>Java</a>, and <a href='https://github.com/popuparchive/AudiosearchClientSwift' target='_blank'>Swift</a>.<br/>Read the <a href='https://github.com/popuparchive/audiosearch-cookbook/wiki'>API Cookbook</a> for easy copy-and-paste recipes.
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  all_shows:
    type: object
    properties:
      categories?:
        type: array
        items:
          type: string
      created_at:
        type: datetime
        description: Date and time the show was created
      deleted_at?:
        type: datetime
        description: Date and time the show was deleted
      description?:
        type: string
        description: Show description
      extra?:
        type: object
        properties:
          itunes_url?:
            type: string
            description: Link to show on iTunes
          sc_feed?:
            type: string
            description: Link to SoundCloud user page
        description: additional information
      id:
        type: integer
        description: Unique identifier for the show
      title:
        type: string
        description: Show title
      updated_at:
        type: datetime
        description: Date and time the show was last updated
  audio_file:
    type: object
    properties:
      current_status:
        type: string
        description: Status of audio file processing in Audiosear.ch
      duration:
        type: integer
        description: Length of audio file
      filename:
        type: string
        description: Audio file name
      id:
        type: integer
        description: Unique identifier for the show's audio file
      url:
        type: array
        description: Absolute paths to audio files
        items:
          type: string
  category:
    type: object
    properties:
      id?:
        type: integer
      name?:
        type: string
      parent_id?:
        type: integer
        description: ID for parent category
  chart_entry:
    type: object
    properties:
      country?:
        type: string
      limit?:
        type: integer
      start_date?:
        type: datetime
  contribution:
    type: object
    properties:
      episode:
        type: episode_brief
      role:
        type: string
        description: the Role the Person played in the Episode
  entity:
    type: object
    properties:
      category:
        type: string
        description: Entity category
      extra?:
        type: object
        description: Additional information about the entity
      id:
        type: integer
        description: Unique identifier for the entity
      identifier?:
        type: string
        description: OpenCalais link
      name?:
        type: string
        description: Name of the entity
      score:
        type: integer
        description: Entity confidence
      type?:
        type: string
        description: Entity type
  episode:
    type: object
    properties:
      audio_files?:
        type: array
        items:
          type: audio_file
      categories?:
        type: array
        description: Categories
        items:
          type: category
      date_added:
        type: datetime
        description: Date and time episode was incorporated into Audiosear.ch
      date_created?:
        type: datetime
        description: Date show originally aired
      description?:
        type: string
        description: Show description
      digital_location?:
        type: string
        description: URL for episode page
      duration?:
        type: integer
        description: Length of audio file in seconds
      entities?:
        type: array
        items:
          type: entity
      extra?:
        type: object
        description: additional resource information
      highlights?:
        type: object
      id:
        type: integer
        description: Unique identifier for the show
      identifier?:
        type: string
        description: URL for source audio file
      image_files?:
        type: array
        items:
          type: image_file
      physical_location?:
        type: string
        description: Source of episode (e.g., SoundCloud, iTunes
      show_id:
        type: integer
        description: ID of parent show
      show_title:
        type: string
        description: Title of parent show
      tags?:
        type: array
        description: Tags
        items:
          type: string
      title:
        type: string
        description: Show title
      updated_at?:
        type: datetime
        description: Date and time item was last updated
      urls?:
        type: urls
  episode_brief:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier for the Episode
      title:
        type: string
        description: Episode title
      urls:
        type: object
        properties:
          ui:
            type: string
            description: URI to Episode human response
          self:
            type: string
            description: URI to Episode API response
  episode_tastemaker:
    type: object
    properties:
      audio_files?:
        type: array
        items:
          type: audio_file
      categories?:
        type: array
        description: Categories
        items:
          type: category
      id:
        type: integer
        description: Unique identifier for the show
      image_urls?:
        type: image_urls
      network?:
        type: string
        description: Network that produces show
      show_id:
        type: integer
        description: ID of parent show
      show_title:
        type: string
        description: Title of parent show
      tags?:
        type: array
        description: Tags
        items:
          type: string
      title:
        type: string
        description: Show title
      urls?:
        type: urls
  excerpt:
    type: object
    properties:
      end_time?:
        type: string
      start_time?:
        type: string
      text?:
        type: string
  highlight_transcript:
    type: object
    properties:
      end_time:
        type: string
        description: End time of highlight
      start_time:
        type: string
        description: Start time of highlight
      text:
        type: string
        description: Highlight text
  highlights:
    type: object
    properties:
      id:
        type: integer
        description: Audio file id
      transcript:
        type: array
        items:
          type: highlight_transcript
      url:
        type: string
        description: File url
  image_file:
    type: object
    properties:
      url:
        type: object
        description: Absolute paths to image files
  image_urls:
    type: object
    properties:
      full?:
        type: string
        description: URL for full-size image
      thumb?:
        type: string
        description: URL for thumbail image
  person:
    type: object
    properties:
      episodes?:
        type: array
        items:
          type: contribution
      extra?:
        type: object
        description: additional resource information
      id:
        type: integer
        description: Unique identifier for the person
      name:
        type: string
        description: Person name
      shows?:
        type: array
        items:
          type: show
      slug?:
        type: string
        description: URI-safe Person name
      urls?:
        type: object
        properties:
          self?:
            type: string
            description: URI to Person API response
  person_search_result:
    type: object
    properties:
      episodes?:
        type: array
        items:
          type: contribution
      id:
        type: integer
        description: ID for the Person
      name:
        type: string
        description: Person's name
      shows?:
        type: array
        items:
          type: show_contribution
      slug?:
        type: string
        description: URI-safe Person's name
      urls?:
        type: object
        properties:
          self?:
            type: string
            description: URI to Person API response
  person_search_results:
    type: object
    properties:
      page?:
        type: integer
      query?:
        type: string
      results?:
        type: array
        items:
          type: person_search_result
      results_per_page?:
        type: integer
      total_results?:
        type: integer
  recent_episode:
    type: object
    properties:
      file_name?:
        type: string
        description: Audio file name
      file_status:
        type: string
        description: Episode processing status
      item_id:
        type: integer
        description: Episode unique id
      item_name:
        type: string
        description: Episode name
  related_result:
    type: object
    properties:
      audio_files?:
        type: array
        description: Array of audio files attributes
        items:
          type: audio_file
      categories?:
        type: array
        description: Categories
        items:
          type: category
      date_added:
        type: string
        description: Date added to Audiosear.ch
      date_created?:
        type: string
        description: Created date for the item
      digital_location?:
        type: string
        description: External item page of source material
      duration?:
        type: integer
        description: Length of audio file
      entities?:
        type: array
        description: Array of entites related to the item
        items:
          type: entity
      id:
        type: integer
        description: ID for the item
      identifier?:
        type: string
        description: Link to external permanent url
      image_urls?:
        type: image_urls
      network?:
        type: string
        description: The Show network
      physical_location?:
        type: string
        description: Episode import source
      show_id:
        type: integer
        description: Show ID that the returned item belongs to
      show_title:
        type: string
        description: Show title associated with the returned item
      tags?:
        type: array
        items:
          type: string
      title:
        type: string
        description: Title for the item
      topics?:
        type: array
        description: Array of topics related to the item
        items:
          type: string
      updated_at?:
        type: integer
        description: Date and time the show was last updated
      urls?:
        type: urls
  results:
    type: object
    properties:
      page?:
        type: integer
      query?:
        type: string
      results?:
        type: search_result
      results_per_page?:
        type: integer
      total_results?:
        type: integer
  search_result:
    type: object
    properties:
      audio_files?:
        type: array
        description: Array of audio files attributes
        items:
          type: audio_file
      categories?:
        type: array
        description: Categories
        items:
          type: category
      date_added:
        type: string
        description: Date added to Audiosear.ch
      date_created?:
        type: string
        description: Created date for the item
      description?:
        type: string
        description: description of the audio file
      digital_location?:
        type: string
        description: External item page of source material
      duration?:
        type: integer
        description: Length of audio file
      entities?:
        type: array
        description: Array of entites related to the item
        items:
          type: entity
      excerpts?:
        type: array
        items:
          type: excerpt
      highlights?:
        type: array
        items:
          type: highlights
      id:
        type: integer
        description: ID for the item
      identifier?:
        type: string
        description: Link to external permanent url
      image_urls?:
        type: image_urls
      itunes_episode?:
        type: integer
        description: iTunes episode id
      locations?:
        type: array
        items:
          type: object
      network?:
        type: string
        description: The Show network
      physical_location?:
        type: string
        description: Episode import source
      show_id:
        type: integer
        description: Show ID that the returned item belongs to
      show_title:
        type: string
        description: Show title associated with the returned item
      title:
        type: string
        description: Title for the item
      topics?:
        type: array
        description: Array of topics related to the item
        items:
          type: string
      updated_at?:
        type: integer
        description: Date and time the show was last updated
      urls?:
        type: urls
  show:
    type: object
    properties:
      categories?:
        type: array
        items:
          type: category
      description?:
        type: string
        description: description of the show
      episode_ids?:
        type: array
        items:
          type: integer
      id:
        type: integer
        description: unique identifier for the show
      image_files?:
        type: array
        items:
          type: image_file
      network?:
        type: string
      number_of_episodes?:
        type: integer
        description: Number of episodes available for this show
      recent_episodes?:
        type: array
        items:
          type: recent_episode
      sc_feed?:
        type: string
        description: SoundCloud URL
      title:
        type: string
        description: title of the show
      urls?:
        type: object
        description: Relative URL to api endpoint
      web_profiles?:
        type: array
        items:
          type: object
  show_brief:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier for the Show
      title:
        type: string
        description: Show title
      urls:
        type: object
        properties:
          ui:
            type: string
            description: URI to Show human response
          self:
            type: string
            description: URI to Show API response
  show_contribution:
    type: object
    properties:
      role:
        type: string
        description: the Role the Person played in the Show
      show:
        type: show_brief
  show_results:
    type: object
    properties:
      page?:
        type: integer
      query?:
        type: string
      results?:
        type: show_search_result
      results_per_page?:
        type: integer
      total_results?:
        type: integer
  show_search_result:
    type: object
    properties:
      categories?:
        type: array
        items:
          type: string
      description?:
        type: string
        description: description of the show
      id:
        type: integer
        description: unique identifier for the show
      image_files?:
        type: array
        items:
          type: image_file
      network?:
        type: string
        description: Distribution network for show
      sc_feed?:
        type: string
        description: SoundCloud URL
      title:
        type: string
        description: title of the show
      web_profiles?:
        type: array
        items:
          type: object
  show_stats_result:
    type: object
    properties:
      day_on_charts?:
        type: integer
        description: Total number of days on the charts since 1 June 2013.
      last_month_median?:
        type: integer
        description: The median rank from the previous calendar month. NULL if not on the charts.
      last_month_peak?:
        type: integer
        description: The highest rank from the previous calendar month. NULL if not on the charts.
      most_recent?:
        type: integer
        description: The rank on the charts from the last 24 hours. NULL if not on the charts.
      peak_rank?:
        type: integer
        description: Highest all-time rank since 1 June 2013.
      show_id?:
        type: integer
      show_title?:
        type: string
  shows:
    type: object
    properties:
      page?:
        type: integer
      query?:
        type: string
      results?:
        type: show
      results_per_page?:
        type: integer
      total_results?:
        type: integer
  simple_search_result:
    type: object
    properties:
      audio_files?:
        type: array
        description: Array of audio files attributes
        items:
          type: audio_file
      categories?:
        type: array
        description: Categories
        items:
          type: category
      id:
        type: integer
        description: ID for the item
      image_urls?:
        type: image_urls
      network?:
        type: string
        description: The Show network
      show_id?:
        type: integer
        description: Show ID that the returned item belongs to
      show_title?:
        type: string
        description: Show title associated with the returned item
      title:
        type: string
        description: Title for the item
      urls?:
        type: urls
  snippet:
    type: object
    properties:
      end_time?:
        type: string
      id?:
        type: integer
      start_time?:
        type: string
      text?:
        type: string
  trending:
    type: object
    properties:
      related_episodes?:
        type: simple_search_result
      trend:
        type: string
        description: Name of trend
      twitter_url:
        type: string
        description: Link to Twitter search results for the trend
  urls:
    type: object
    properties:
      self?:
        type: string
        description: API URL
      ui?:
        type: string
        description: Audiosear.ch URL
/chart_daily:
  get:
    description: Returns shows that have been in the top 100 on the iTunes charts and their ranks
    queryParameters:
      start_date?:
        type: datetime
        description: The start date of the charts data in the format YYYY-MM-DD. Maximum (and default) date is the most recent chart date minus one week; earliest is 2013-06-01)
        displayName: start_date
      limit?:
        type: integer
        description: The highest ranks for which to get data. Default is 10, maximum is 100.
        displayName: limit
        default: 10
      country?:
        type: string
        description: 'The country for which to get charts data. US: ''us'', Great
          Britain: ''gb'', Ireland: ''ie'', New Zealand: ''nz'', South Africa: ''za'''
        displayName: country
        default: us
    responses:
      200:
        description: Chart ranks of shows listed by title
        body:
          application/json:
            type: chart_entry
/episodes:
  /{id}:
    uriParameters:
      id:
        type: integer
        description: ID of episode to fetch
        displayName: id
    /related:
      get:
        description: Returns episodes related to a given episode
        queryParameters:
          size?:
            type: integer
            description: Number of episodes to be returned. Must be paired with <b>from</b>.
            displayName: size
            format: int64
          from?:
            type: integer
            description: Offset of result from which to start (zero-based). Must be paired with <b>size</b>.
            displayName: from
            format: int64
        responses:
          200:
            description: An array of episodes
            body:
              application/json:
                type: related_result
    /snippet:
      /{time_in_secs}:
        uriParameters:
          time_in_secs:
            type: integer
            description: Timestamp of moment in audio in seconds.
            displayName: time_in_secs
            format: int64
        get:
          description: Returns a specific moment from an episode with two lines of context.
          responses:
            200:
              description: An array of episodes
              body:
                application/json:
                  type: snippet
    get:
      description: Gets a single episode record by ID
      responses:
        200:
          description: Returns an individual episode
          body:
            application/json:
              type: episode
/episodes?itunes_id={id}:
  uriParameters:
    id:
      type: integer
      description: ID of show to fetch
      displayName: id
      format: int64
  get:
    description: 'Gets a single episode record by iTunes ID. (Note: we may not have
      every episode for every show.)'
    responses:
      200:
        description: Returns an individual episode
        body:
          application/json:
            type: episode
/people:
  /{id}:
    uriParameters:
      id:
        type: integer
        description: ID of person to fetch
        displayName: id
        format: int64
    get:
      description: This endpoint will return the metadata for a single person.
      responses:
        200:
          description: person id response
          body:
            application/json:
              type: person
/random_episode:
  get:
    description: Selects and returns a random episode
    responses:
      200:
        description: Returns a random episode
        body:
          application/json:
            type: episode
/search:
  /episodes:
    /{query}:
      uriParameters:
        query:
          type: string
          description: 'Thing you would like to search for. A wildcard character (`*`)
            can be used to substitute for any other character or characters in a string.
            Submitting `*` will return all results. To restrict the query to a single
            field, preface the query with the field name followed by `:`, (e.g. `title:
            roller coaster` or `itunes_episode:348644077` or `entity:Obama`).'
          displayName: query
      get:
        description: Returns search results
        queryParameters:
          filters[network]?:
            type: string
            description: 'Limit a search by any field value. This example uses <b>network</b>
              but any field name could be used. (Note: the filter uses a ''term''
              match, so it returns a result if the field contains the term. It is
              most reliably used with integer values, such as <b>filters[show_id]=15</b>)
              Examples: <b>filters[physical_location]=popuparchive</b> or <b>filters[network]=NPR</b>
              or <b>filters[categories.name]=Talk%20Show</b>.'
            displayName: filters[network]
          filters[show_id]?:
            type: string
            description: Another example filter, by show id.
            displayName: filters[show_id]
          filters[with_transcript]?:
            type: string
            description: Add this filter (no value required) to filter out episodes with no transcript.
            displayName: filters[with_transcript]
          sort_by?:
            type: string
            description: Sort results by any field value. The default is by the relevancy score (<b>_score</b>). Must be paired with <b>sort_order</b>.
            displayName: sort_by
          sort_order?:
            type: string
            description: Sort direction. Must be either <b>asc</b> or <b>desc</b>. Must be paired with <b>sort_by</b>.
            displayName: sort_order
          s?:
            type: string
            description: Shortcut for specifying sort_by and sort_order in a single value. E.g. <b>date_created desc</b>.
            displayName: s
          size?:
            type: string
            description: The number of results in a single page. Default is <b>10</b>. If present, must be paired with <b>from</b>.
            displayName: size
          from?:
            type: string
            description: Offset when doing manual pagination. Must be paired with <b>size</b>.
            displayName: from
          page?:
            type: string
            description: The page number of results. Default is <b>1</b>.
            displayName: page
          related?:
            type: integer
            description: Set to positive integer to include an array of N related episodes for each search result
            displayName: related
        responses:
          200:
            description: Returns search results
            body:
              application/json:
                type: results
  /people:
    /{query}:
      uriParameters:
        query:
          type: string
          description: 'Thing you would like to search for. A wildcard character (`*`)
            can be used to substitute for any other character or characters in a string.
            Submitting `*` will return all results. To restrict the query to a single
            field, preface the query with the field name followed by `:`, (e.g. `name:
            Gene`).'
          displayName: query
      get:
        description: This endpoint returns search results for People
        queryParameters:
          filters[shows.id]?:
            type: string
            description: Limit a search by any field value. This example uses <b>shows.id</b> but any field name could be used. E.g. <b>filters[shows.id]=123</b> or <b>filters[episode.id]=456</b>.
            displayName: filters[shows.id]
          sort_by?:
            type: string
            description: Sort results by any field value. The default is by the relevancy score (<b>_score</b>). Must be paired with <b>sort_order</b>.
            displayName: sort_by
          sort_order?:
            type: string
            description: Sort direction. Must be either <b>asc</b> or <b>desc</b>. Must be paired with <b>sort_by</b>.
            displayName: sort_order
          s?:
            type: string
            description: Shortcut for specifying sort_by and sort_order in a single value. E.g. <b>name desc</b>.
            displayName: s
          size?:
            type: string
            description: The number of results in a single page. Default is <b>10</b>. If present, must be paired with <b>from</b>.
            displayName: size
          from?:
            type: string
            description: Offset when doing manual pagination. Must be paired with <b>size</b>.
            displayName: from
          page?:
            type: string
            description: The page number of results. Default is <b>1</b>.
            displayName: page
        responses:
          200:
            description: Returns search results
            body:
              application/json:
                type: person_search_results
  /shows:
    /{query}:
      uriParameters:
        query:
          type: string
          description: 'Thing you would like to search for. A wildcard character (`*`)
            can be used to substitute for any other character or characters in a string.
            Submitting `*` will return all results. To restrict the query to a single
            field, preface the query with the field name followed by `:`, (e.g. `title:
            radio`).'
          displayName: query
      get:
        description: This endpoint returns search results for Shows
        queryParameters:
          filters[network]?:
            type: string
            description: 'Limit a search by any field value. This example uses <b>network</b>
              but any field name could be used. (Note: the filter uses a ''term''
              match, so it returns a result if the field contains the term. It is
              most reliably used with integer values.) E.g. <b>filters[network]=NPR</b>
              or <b>filters[categories.name]=Talk%20Show</b>.'
            displayName: filters[network]
          sort_by?:
            type: string
            description: Sort results by any field value. The default is by the relevancy score (<b>_score</b>). Must be paired with <b>sort_order</b>.
            displayName: sort_by
          sort_order?:
            type: string
            description: Sort direction. Must be either <b>asc</b> or <b>desc</b>. Must be paired with <b>sort_by</b>.
            displayName: sort_order
          s?:
            type: string
            description: Shortcut for specifying sort_by and sort_order in a single value. E.g. <b>date_created desc</b>.
            displayName: s
          size?:
            type: string
            description: The number of results in a single page. Default is <b>10</b>. If present, must be paired with <b>from</b>.
            displayName: size
          from?:
            type: string
            description: Offset when doing manual pagination. Must be paired with <b>size</b>.
            displayName: from
          page?:
            type: string
            description: The page number of results. Default is <b>1</b>.
            displayName: page
        responses:
          200:
            description: Returns search results
            body:
              application/json:
                type: show_results
/shows:
  /{id}:
    uriParameters:
      id:
        type: integer
        description: ID of show to fetch
        displayName: id
        format: int64
    /related:
      get:
        description: Returns shows related to the supplied show.
        responses:
          200:
            description: related show response
            body:
              application/json:
                type: show_search_result
    /stats:
      get:
        description: Returns in-depth statistics for the supplied show.
        responses:
          200:
            description: related show response
            body:
              application/json:
                type: show_stats_result
    get:
      description: This endpoint will return the medatdata for a single show.
      responses:
        200:
          description: show id response
          body:
            application/json:
              type: shows
/shows?itunes_id={id}:
  uriParameters:
    id:
      type: integer
      description: ID of show to fetch
      displayName: id
      format: int64
  get:
    description: 'This endpoint will return the medatdata for a single show given
      its iTunes id. (Note: we do not have every show in iTunes''s database)'
    responses:
      200:
        description: show id response
        body:
          application/json:
            type: shows
/tastemakers:
  /episodes:
    /source:
      /{tastemaker_id}:
        uriParameters:
          tastemaker_id:
            type: integer
            description: Recommendation source
            displayName: tastemaker_id
            format: int64
        /{n}:
          uriParameters:
            n:
              type: integer
              description: Number of results to fetch
              displayName: n
              default: 10
              format: int64
          get:
            description: Returns search results based on what podcast tastemakers are talking about filtered by tastemaker source.
            responses:
              200:
                description: tastemakers episodes response
                body:
                  application/json:
                    type: episode_tastemaker
    /{n}:
      uriParameters:
        n:
          type: integer
          description: Number of results to fetch
          displayName: n
          default: 10
          format: int64
      get:
        description: Returns search results based on what podcast tastemakers are talking about.
        responses:
          200:
            description: tastemakers episodes response
            body:
              application/json:
                type: episode_tastemaker
  /shows:
    /{n}:
      uriParameters:
        n:
          type: integer
          description: Number of results to fetch
          displayName: n
          default: 10
          format: int64
      get:
        description: This endpoint returns search results based on what tastemakers are talking about.
        responses:
          200:
            description: tastemakers shows response
            body:
              application/json:
                type: shows
/trending:
  get:
    description: Returns episodes related to trending terms from Twitter
    responses:
      200:
        description: A list of episodes
        body:
          application/json:
            type: trending
