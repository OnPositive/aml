#%RAML 1.0
title: Beanstream Payments
version: 1.0.1
baseUri: www.beanstream.com/api/v1
description: https://www.beanstream.com/api/v1
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  Address:
    type: object
    properties:
      address_line1?:
        type: string
        description: alphanumeric (64)
      address_line2?:
        type: string
        description: alphanumeric (64)
      city?:
        type: string
        description: alphanumeric (32)
      country?:
        type: string
        description: characters (2)
      email_address?:
        type: string
        description: alphanumeric (32)
      name?:
        type: string
        description: alphanumeric (64)
      phone_number?:
        type: string
        description: alphanumeric (32)
      postal_code?:
        type: string
        description: alphanumeric (16)
      province?:
        type: string
        description: characters (2)
  Adjustment:
    type: object
    properties:
      amount?:
        type: number
        format: double
      approval?:
        type: integer
      created?:
        type: string
        description: The date it was created '2015-04-22T10:03:19.323-07:00'
      id?:
        type: integer
      message?:
        type: string
      type?:
        type: string
      url?:
        type: string
  BeanstreamException:
    type: object
    properties:
      category?:
        type: integer
        format: int32
      code?:
        type: integer
        format: int32
      details?:
        type: array
        items:
          type: Detail
      message?:
        type: string
      reference?:
        type: string
  Card:
    type: object
    properties:
      complete?:
        type: boolean
        description: set to false for Pre-Authorize, and true to complete a payment
      cvd?:
        type: string
        description: Security code on the back of the credit card. This can be set to mandatory in the back office. digits(3 or 4)
      expiry_month:
        type: string
        description: eg. 02 for February. digits(2)
      expiry_year:
        type: string
        description: eg. 15 for 2015. digits(2)
      name:
        type: string
        description: Card holder name. alphanumeric(64)
      number:
        type: string
        description: Credit card number (PAN). digits(20)
  CardGetTransactionResponse:
    type: object
    properties:
      address_match?:
        type: integer
        description: digits (1)
      avs_result?:
        type: string
        description: characters (1)
      card_type?:
        type: string
        description: characters (2)
      cvd_match?:
        type: integer
        description: digits (2)
      expiry_month?:
        type: string
        description: characters (2)
      expiry_year?:
        type: string
        description: characters (2)
      last_four?:
        type: string
        description: digits (4)
  CardPurchaseResponse:
    type: object
    properties:
      address_match?:
        type: integer
        description: digits (1)
      card_type?:
        type: string
        description: characters (2)
      cvd_match?:
        type: integer
        description: digits (2)
      last_four?:
        type: string
        description: digits (4)
      postal_result?:
        type: integer
        description: digits (1)
  CreateProfileBody:
    type: object
    properties:
      billing?:
        type: Address
      card?:
        type: ProfileFromCard
      comment?:
        type: string
        description: alphanumeric(256)
      custom?:
        type: Custom
      language?:
        type: string
        description: characters(2)
      token?:
        type: ProfileFromToken
  Criteria:
    type: object
    properties:
      field?:
        type: integer
        description: Refer to the table on this page for the searchable fields http://developer.beanstream.com/documentation/analyze-payments/search-specific-criteria/
      operator?:
        type: string
        description: URL encoded comparators such as less than, greater than, equals... Refer to the table on this page for the full list of comparators http://developer.beanstream.com/documentation/analyze-payments/search-specific-criteria/
      value?:
        type: string
        description: The value you want to match against.
  Custom:
    type: object
    properties:
      ref1?:
        type: string
        description: alphanumeric (256)
      ref2?:
        type: string
        description: alphanumeric (256)
      ref3?:
        type: string
        description: alphanumeric (256)
      ref4?:
        type: string
        description: alphanumeric (256)
      ref5?:
        type: string
        description: alphanumeric (256)
  Detail:
    type: object
    properties:
      field?:
        type: string
      message?:
        type: string
  GetProfileDefaultCard:
    type: object
    properties:
      card_type?:
        type: string
        description: MC, VI etc. characters(2)
      expiry_month?:
        type: string
        description: digits(2)
      expiry_year?:
        type: string
        description: digits(2)
      name?:
        type: string
        description: cardholder name alphanumeric(64)
      number?:
        type: string
        description: masked credit card number alphanumeric(20)
  Link:
    type: object
    properties:
      href?:
        type: string
        description: alphanumeric (256). Url to perform the void, return, completion etc.
      method?:
        type: string
        description: characters (16). Http method. post, put, get etc.
      ref?:
        type: string
        description: characters (16). Eg. "void" or "return"
  PaymentProfile:
    type: object
    properties:
      account_ref?:
        type: string
      billing?:
        type: Address
      card?:
        type: GetProfileDefaultCard
      code?:
        type: integer
        description: digits(2)
        format: int32
      custom?:
        type: Custom
      customer_code?:
        type: string
        description: alphanumeric(32)
      language?:
        type: string
        description: characters(2)
      last_transaction?:
        type: string
        description: date and time alphanumeric(24)
      message?:
        type: string
        description: alphanumeric(64)
      modified_date?:
        type: string
        description: date and time it was last modified alphanumeric(24)
      profile_group?:
        type: string
      status?:
        type: string
        description: characters(1)
      velocity_group?:
        type: string
  PaymentRequest:
    type: object
    properties:
      amount:
        type: number
        description: A decimal value in dollars, or relevant currency. digits(9)
        format: double
      billing?:
        type: Address
        description: The billing address
      card?:
        type: Card
        description: Payment with a credit card. The payment_method must be 'card'
      comments?:
        type: string
        description: alphanumeric (256)
      custom?:
        type: Custom
      customer_ip?:
        type: string
        description: alphanumeric (30)
      language?:
        type: string
        description: characters (3)
      order_number?:
        type: string
        description: A unique order number. alphanumeric(30)
      payment_method:
        type: string
        description: One of (card, token, payment_profile, cash, cheque). characters(20)
      payment_profile?:
        type: ProfilePurchase
        description: Payment with a Payment Profile. The payment_method must be 'payment_profile'
      shipping?:
        type: Address
        description: The shipping address
      term_url?:
        type: string
        description: alphanumeric (256)
      token?:
        type: TokenPurchase
        description: Payment with a Legato token. The payment_method must be 'token'
  PaymentResponse:
    type: object
    properties:
      approved?:
        type: integer
        description: Approved = 1, declined = 0
      auth_code?:
        type: string
        description: alphanumeric (32)
      card?:
        type: CardPurchaseResponse
      created?:
        type: string
        description: alphanumeric (32)
      id?:
        type: string
        description: digits (9)
      links?:
        type: array
        items:
          type: Link
      message?:
        type: string
        description: alphanumeric (256)
      message_id?:
        type: string
        description: digits (3)
      order_number?:
        type: string
        description: alphanumeric (32)
      payment_method?:
        type: string
        description: characters (16)
      type?:
        type: string
        description: characters (16)
  ProfileCard:
    type: object
    properties:
      expiry_month?:
        type: string
        description: digits(2)
      expiry_year?:
        type: string
        description: digits(2)
      name?:
        type: string
        description: cardholder name. alphanumeric(64)
      number?:
        type: string
        description: Credit card number. digits(20)
    description: The card that will be updated on the profile.
  ProfileCards:
    type: object
    properties:
      card_id?:
        type: string
        description: 1-indexed card ID. Total number of cards allowed is configured in your merchant account.
      card_type?:
        type: string
        description: MC, VI etc. characters(2)
      expiry_month?:
        type: string
        description: digits(2)
      expiry_year?:
        type: string
        description: digits(2)
      function?:
        type: string
        description: Will say DEF for the default card
      number?:
        type: string
        description: digits(20)
  ProfileFromCard:
    type: object
    properties:
      cvd?:
        type: string
        description: Security code on the back of the credit card. This can be set to mandatory in the back office. digits(3)
      expiry_month:
        type: string
        description: eg. 02 for February. digits(2)
      expiry_year:
        type: string
        description: digits(2)
      name:
        type: string
        description: Card holder name. alphanumeric(64)
      number:
        type: string
        description: Credit card number (PAN)  digits(20)
  ProfileFromToken:
    type: object
    properties:
      code:
        type: string
        description: The token received from the client-side tokenization service. alphanumeric(64)
      name:
        type: string
        description: alphanumeric(64)
  ProfileGetCards:
    type: object
    properties:
      card?:
        type: array
        items:
          type: ProfileCards
      code?:
        type: integer
        description: digits(2)
      customer_code?:
        type: string
        description: characters(32)
      message?:
        type: string
        description: alphanumeric(64)
  ProfilePurchase:
    type: object
    properties:
      card_id:
        type: integer
        description: Which credit card to use. Starts at 1 for the first card. You must configure how many cards can be stored by visiting the profile options in the back office. digits(1)
      complete?:
        type: boolean
        description: Set to FALSE for pre-auth. digit(1) or boolean
      customer_code:
        type: string
        description: The payment profile ID. alphanumeric(32)
  ProfileResponse:
    type: object
    properties:
      code?:
        type: integer
      customer_code?:
        type: string
        description: the ID of the payment profile. You need to keep track of this value.
      message?:
        type: string
  ProfileToken:
    type: object
    properties:
      code?:
        type: string
        description: single use token associated with this account. alphanumeric(36)
      name?:
        type: string
        description: Name of cardholder. alphanumeric(64)
  Return:
    type: object
    properties:
      amount:
        type: number
        description: The amount of the transaction to return. Must be less than or equal to the original purchase amount.
        format: double
      order_number?:
        type: string
        description: alphanumeric (30)
  SearchQuery:
    type: object
    properties:
      criteria?:
        type: array
        description: Optional search criteria. All criteria are ANDed together.
        items:
          type: Criteria
      end_date:
        type: string
        description: The end date (inclusive) '2015-04-22T10:03:19' in the timezone of your merchant account.
      end_row:
        type: integer
        description: Used to page the results. 1-based. This should always be 1 larger than start_row.
      name:
        type: string
        description: Only accepts 2 values. Can be either 'Search' for all fields or 'TransHistoryMinimal' for a subset of the fields returned in the results.
      start_date:
        type: string
        description: The start date (inclusive) '2015-04-22T10:03:19' in the timezone of your merchant account.
      start_row:
        type: integer
        description: Used to page the results. 1-based
  SearchRecord:
    type: object
    properties:
      b_address1?:
        type: string
      b_address2?:
        type: string
      b_city?:
        type: string
      b_country?:
        type: string
      b_email?:
        type: string
      b_name?:
        type: string
      b_phone?:
        type: string
      b_postal?:
        type: string
      b_province?:
        type: string
      customer_code?:
        type: string
        description: The PaymentProfile ID used in this transaction, if appropriate.
      message_id?:
        type: integer
      message_text?:
        type: string
      product_id?:
        type: string
      product_name?:
        type: string
      ref1?:
        type: string
      ref2?:
        type: string
      ref3?:
        type: string
      ref4?:
        type: string
      ref5?:
        type: string
      row_id?:
        type: integer
      s_address1?:
        type: string
      s_address2?:
        type: string
      s_city?:
        type: string
      s_country?:
        type: string
      s_email?:
        type: string
      s_name?:
        type: string
      s_phone?:
        type: string
      s_postal?:
        type: string
      s_province?:
        type: string
      trn_amount?:
        type: number
        format: float
      trn_approval_code?:
        type: string
      trn_avs_result?:
        type: string
        description: Address Verification Service
      trn_batch_no?:
        type: integer
      trn_card_expiry?:
        type: string
      trn_card_owner?:
        type: string
      trn_card_type?:
        type: string
        description: MC VI etc
      trn_completions?:
        type: number
        format: float
      trn_cvd_result?:
        type: integer
      trn_date_time?:
        type: string
        description: '2015-04-22T10:03:19.323-07:00'
      trn_id?:
        type: integer
      trn_ip?:
        type: string
      trn_masked_card?:
        type: string
        description: The credit card with the middle digits redacted with X's
      trn_order_number?:
        type: string
      trn_payment_method?:
        type: string
      trn_reference?:
        type: integer
      trn_response?:
        type: integer
      trn_returns?:
        type: number
        format: float
      trn_type?:
        type: string
      trn_voided?:
        type: integer
  SearchResult:
    type: object
    properties:
      records?:
        type: array
        items:
          type: SearchRecord
  TokenPurchase:
    type: object
    properties:
      code:
        type: string
        description: the payment token you retrieved from the Legato service. alphanumeric(36)
      complete?:
        type: boolean
        description: Set to FALSE for pre-auth
      name:
        type: string
        description: Card holder name. alphanumeric(64)
  TokenRequest:
    type: object
    properties:
      cvd:
        type: string
        description: a 3 to 4 digit representation of CVD/CDD. This is the number usually found on the back of the credit card.
      expiry_month:
        type: string
        description: a 2 digit representation of the expiry month. For example March is 03.
      expiry_year:
        type: string
        description: a 2 digit representation of the expiry year. For example 2016 is 16.
      number:
        type: string
        description: The credit card number
  TokenResponse:
    type: object
    properties:
      code?:
        type: string
        description: Response code for the message. It can be ignored.
      message?:
        type: string
        description: Response message with any hints as to what might have gone wrong, if something went wrong.
      token:
        type: string
        description: The token representing the credit card number that you will send to Beanstream for purchases. You will always receive a token, even if the request data is wrong or the card is invalid.
      version?:
        type: integer
        description: Message version number. Can be ignored.
  Transaction:
    type: object
    properties:
      adjusted_by?:
        type: array
        items:
          type: Adjustment
      amount?:
        type: number
        format: double
      approved?:
        type: boolean
      auth_code?:
        type: string
      batch_number?:
        type: string
      billing?:
        type: Address
      card?:
        type: CardGetTransactionResponse
      comments?:
        type: string
      created?:
        type: string
        description: The date it was created '2015-04-22T10:03:19.323-07:00'
      custom?:
        type: Custom
      id?:
        type: integer
      links?:
        type: array
        items:
          type: Link
      message?:
        type: string
      message_id?:
        type: integer
      order_number?:
        type: string
      payment_method?:
        type: string
      shipping?:
        type: Address
      total_completions?:
        type: number
        format: double
      total_refunds?:
        type: number
        format: double
      type?:
        type: string
  UpdateProfileBody:
    type: object
    properties:
      billing?:
        type: Address
      card?:
        type: ProfileToken
      comment?:
        type: string
        description: alphanumeric(256)
      custom?:
        type: Custom
      language?:
        type: string
        description: characters(2)
  Void:
    type: object
    properties:
      amount:
        type: number
        description: The amount of the transaction to void. Must be equal to the original purchase amount. You can void purchases as well as pre-auths and returns. The amount you are voiding has to match the amount of that transaction.
        format: double
/payments:
  /{transId}:
    uriParameters:
      transId:
        type: integer
        description: The transaction id.
        displayName: transId
    /completions:
      post:
        description: Complete a pre-authorized payment. The amount of the transaction to complete must be less than or equal to the original pre-auth amount. Complete must be set to true.
        displayName: Complete pre-auth
        body:
          application/json: PaymentRequest
        responses:
          200:
            description: Payment response containing the payment details as well as if the transaction was approved or declined.
            body:
              application/json:
                type: PaymentResponse
          400:
            description: Bad Request
            body:
              application/json:
                type: BeanstreamException
          401:
            description: Authentication Failure
            body:
              application/json:
                type: BeanstreamException
          402:
            description: Business Rule Violation or Decline
            body:
              application/json:
                type: BeanstreamException
          403:
            description: Authorization Failure
            body:
              application/json:
                type: BeanstreamException
          405:
            description: Invalid Request Method
            body:
              application/json:
                type: BeanstreamException
          500:
            description: Internal Server Error
            body:
              application/json:
                type: BeanstreamException
    /returns:
      post:
        description: Return payment.
        displayName: Return payment
        body:
          application/json: Return
        responses:
          200:
            description: Payment response containing the payment details as well as if the transaction was approved or declined.
            body:
              application/json:
                type: PaymentResponse
          400:
            description: Bad Request
            body:
              application/json:
                type: BeanstreamException
          401:
            description: Authentication Failure
            body:
              application/json:
                type: BeanstreamException
          402:
            description: Business Rule Violation or Decline
            body:
              application/json:
                type: BeanstreamException
          403:
            description: Authorization Failure
            body:
              application/json:
                type: BeanstreamException
          405:
            description: Invalid Request Method
            body:
              application/json:
                type: BeanstreamException
          500:
            description: Internal Server Error
            body:
              application/json:
                type: BeanstreamException
    /void:
      post:
        description: Void a transaction. You can void payments, returns, pre-auths, and completions. It will cancel that transaction.
        displayName: Void Transaction
        body:
          application/json: Void
        responses:
          200:
            description: Payment response containing the payment details as well as if the transaction was approved or declined.
            body:
              application/json:
                type: PaymentResponse
          400:
            description: Bad Request
            body:
              application/json:
                type: BeanstreamException
          401:
            description: Authentication Failure
            body:
              application/json:
                type: BeanstreamException
          402:
            description: Business Rule Violation or Decline
            body:
              application/json:
                type: BeanstreamException
          403:
            description: Authorization Failure
            body:
              application/json:
                type: BeanstreamException
          405:
            description: Invalid Request Method
            body:
              application/json:
                type: BeanstreamException
          500:
            description: Internal Server Error
            body:
              application/json:
                type: BeanstreamException
    get:
      description: Get a previous payment (transaction).
      displayName: Get payment
      responses:
        200:
          description: A transaction object.
          body:
            application/json:
              type: Transaction
        400:
          description: Bad Request
          body:
            application/json:
              type: BeanstreamException
        401:
          description: Authentication Failure
          body:
            application/json:
              type: BeanstreamException
        402:
          description: Business Rule Violation or Decline
          body:
            application/json:
              type: BeanstreamException
        403:
          description: Authorization Failure
          body:
            application/json:
              type: BeanstreamException
        405:
          description: Invalid Request Method
          body:
            application/json:
              type: BeanstreamException
        500:
          description: Internal Server Error
          body:
            application/json:
              type: BeanstreamException
  post:
    description: Make a payment using credit card, cash, cheque, profile, or token. Each payment type has its own json definition passed in the body. For all payments you have the standard Billing, Shipping, Comments, etc. fields that are optional. Only the amount is required along with the payment data for card, cash, cheque, profile, and token. You must change the payment_method for each payment type. Credit Card - "card", Payment Profile - "payment_profile", Legato Token - "token", Cash - "cash", Cheque - "cheque", Interac - "interac"
    displayName: Make Payment
    body:
      application/json: PaymentRequest
    responses:
      200:
        description: Payment response containing the payment details as well as if the payment was approved or declined.
        body:
          application/json:
            type: PaymentResponse
      400:
        description: Bad Request
        body:
          application/json:
            type: BeanstreamException
      401:
        description: Authentication Failure
        body:
          application/json:
            type: BeanstreamException
      402:
        description: Business Rule Violation or Decline
        body:
          application/json:
            type: BeanstreamException
      403:
        description: Authorization Failure
        body:
          application/json:
            type: BeanstreamException
      405:
        description: Invalid Request Method
        body:
          application/json:
            type: BeanstreamException
      500:
        description: Internal Server Error
        body:
          application/json:
            type: BeanstreamException
/profiles:
  /{profileId}:
    uriParameters:
      profileId:
        type: string
        description: The profile id. (aka CustomerCode)
        displayName: profileId
    /cards:
      /{cardId}:
        uriParameters:
          cardId:
            type: integer
            description: The card id.
            displayName: cardId
        delete:
          description: Delete a card on the profile.
          displayName: Delete card
          responses:
            200:
              description: The Profile.
              body:
                application/json:
                  type: ProfileResponse
            400:
              description: Bad Request
              body:
                application/json:
                  type: BeanstreamException
            401:
              description: Authentication Failure
              body:
                application/json:
                  type: BeanstreamException
            402:
              description: Business Rule Violation or Decline
              body:
                application/json:
                  type: BeanstreamException
            403:
              description: Authorization Failure
              body:
                application/json:
                  type: BeanstreamException
            405:
              description: Invalid Request Method
              body:
                application/json:
                  type: BeanstreamException
            500:
              description: Internal Server Error
              body:
                application/json:
                  type: BeanstreamException
        put:
          description: Update the details of a card on the profile.
          displayName: Update card
          body:
            application/json: ProfileCard
          responses:
            200:
              description: The Profile.
              body:
                application/json:
                  type: ProfileResponse
            400:
              description: Bad Request
              body:
                application/json:
                  type: BeanstreamException
            401:
              description: Authentication Failure
              body:
                application/json:
                  type: BeanstreamException
            402:
              description: Business Rule Violation or Decline
              body:
                application/json:
                  type: BeanstreamException
            403:
              description: Authorization Failure
              body:
                application/json:
                  type: BeanstreamException
            405:
              description: Invalid Request Method
              body:
                application/json:
                  type: BeanstreamException
            500:
              description: Internal Server Error
              body:
                application/json:
                  type: BeanstreamException
      get:
        description: Get all of the cards on the profile.
        displayName: Get cards
        responses:
          200:
            description: The Profile.
            body:
              application/json:
                type: ProfileGetCards
          400:
            description: Bad Request
            body:
              application/json:
                type: BeanstreamException
          401:
            description: Authentication Failure
            body:
              application/json:
                type: BeanstreamException
          402:
            description: Business Rule Violation or Decline
            body:
              application/json:
                type: BeanstreamException
          403:
            description: Authorization Failure
            body:
              application/json:
                type: BeanstreamException
          405:
            description: Invalid Request Method
            body:
              application/json:
                type: BeanstreamException
          500:
            description: Internal Server Error
            body:
              application/json:
                type: BeanstreamException
      post:
        description: Add a card to the profile. Note that there is a default limit of 1 card per profile. You can change this in your Profiles settings in the back office.
        displayName: Add card
        body:
          application/json: ProfileCard
        responses:
          200:
            description: The Profile.
            body:
              application/json:
                type: ProfileResponse
          400:
            description: Bad Request
            body:
              application/json:
                type: BeanstreamException
          401:
            description: Authentication Failure
            body:
              application/json:
                type: BeanstreamException
          402:
            description: Business Rule Violation or Decline
            body:
              application/json:
                type: BeanstreamException
          403:
            description: Authorization Failure
            body:
              application/json:
                type: BeanstreamException
          405:
            description: Invalid Request Method
            body:
              application/json:
                type: BeanstreamException
          500:
            description: Internal Server Error
            body:
              application/json:
                type: BeanstreamException
    get:
      description: Get a Payment Profile using the profile ID, also known as the Customer Code.
      displayName: Get profile
      responses:
        200:
          description: The Profile.
          body:
            application/json:
              type: PaymentProfile
        400:
          description: Bad Request
          body:
            application/json:
              type: BeanstreamException
        401:
          description: Authentication Failure
          body:
            application/json:
              type: BeanstreamException
        402:
          description: Business Rule Violation or Decline
          body:
            application/json:
              type: BeanstreamException
        403:
          description: Authorization Failure
          body:
            application/json:
              type: BeanstreamException
        405:
          description: Invalid Request Method
          body:
            application/json:
              type: BeanstreamException
        500:
          description: Internal Server Error
          body:
            application/json:
              type: BeanstreamException
    delete:
      description: Delete a Payment Profile using the profile ID, also known as the Customer Code.
      displayName: Delete profile
      responses:
        200:
          description: The Profile.
          body:
            application/json:
              type: ProfileResponse
        400:
          description: Bad Request
          body:
            application/json:
              type: BeanstreamException
        401:
          description: Authentication Failure
          body:
            application/json:
              type: BeanstreamException
        402:
          description: Business Rule Violation or Decline
          body:
            application/json:
              type: BeanstreamException
        403:
          description: Authorization Failure
          body:
            application/json:
              type: BeanstreamException
        405:
          description: Invalid Request Method
          body:
            application/json:
              type: BeanstreamException
        500:
          description: Internal Server Error
          body:
            application/json:
              type: BeanstreamException
    put:
      description: Create a new Payment Profile using either a card or a Legato token. You must supply one of them.
      displayName: Update Profile
      body:
        application/json: UpdateProfileBody
      responses:
        200:
          description: The Profile.
          body:
            application/json:
              type: ProfileResponse
        400:
          description: Bad Request
          body:
            application/json:
              type: BeanstreamException
        401:
          description: Authentication Failure
          body:
            application/json:
              type: BeanstreamException
        402:
          description: Business Rule Violation or Decline
          body:
            application/json:
              type: BeanstreamException
        403:
          description: Authorization Failure
          body:
            application/json:
              type: BeanstreamException
        405:
          description: Invalid Request Method
          body:
            application/json:
              type: BeanstreamException
        500:
          description: Internal Server Error
          body:
            application/json:
              type: BeanstreamException
  post:
    description: Create a new Payment Profile using either a card or a Legato token. You must supply one of them.
    displayName: Create Profile
    body:
      application/json: CreateProfileBody
    responses:
      200:
        description: The Profile.
        body:
          application/json:
            type: ProfileResponse
      400:
        description: Bad Request
        body:
          application/json:
            type: BeanstreamException
      401:
        description: Authentication Failure
        body:
          application/json:
            type: BeanstreamException
      402:
        description: Business Rule Violation or Decline
        body:
          application/json:
            type: BeanstreamException
      403:
        description: Authorization Failure
        body:
          application/json:
            type: BeanstreamException
      405:
        description: Invalid Request Method
        body:
          application/json:
            type: BeanstreamException
      500:
        description: Internal Server Error
        body:
          application/json:
            type: BeanstreamException
/reports:
  post:
    description: Query for transactions using a date range and optional search criteria. This method allows you to page your search results if you are expecting a lot of results to be returned. The page start value begins at 1. If no records are found the API will return a 404 error message. For details on the parameters and allowed values for Criteria please visit the documentation http://developer.beanstream.com/documentation/analyze-payments/search-specific-criteria/
    displayName: Search Query
    body:
      application/json: SearchQuery
    responses:
      200:
        description: A transaction object.
        body:
          application/json:
            type: SearchResult
      400:
        description: Bad Request
        body:
          application/json:
            type: BeanstreamException
      401:
        description: Authentication Failure
        body:
          application/json:
            type: BeanstreamException
      402:
        description: Business Rule Violation or Decline
        body:
          application/json:
            type: BeanstreamException
      403:
        description: Authorization Failure
        body:
          application/json:
            type: BeanstreamException
      405:
        description: Invalid Request Method
        body:
          application/json:
            type: BeanstreamException
      500:
        description: Internal Server Error
        body:
          application/json:
            type: BeanstreamException
/scripts:
  /tokenization:
    /tokens:
      post:
        description: NOTE that the full URL for this API call is https://www.beanstream.com/scripts/tokenization/tokens. Turn a credit card into a token using this service. This helps lessen your PCI scope by not passing the credit card information to your server. Instead you turn the card number into a token in the client app, then send the token to the server. When you send the token to Beanstream to make a payment, Beanstream then looks up the card number from that token and makes the payment. Tokens can also be used to create payment profiles.
        displayName: Tokenize credit card
        body:
          application/json: TokenRequest
        responses:
          200:
            description: Token response object. One will always be returned even if the data or card was invalid. The validity of the card is not checked with this API call.
            body:
              application/json:
                type: TokenResponse
